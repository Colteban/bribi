---
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import KpiPanel from "../components/KpiPanel.astro";
import NewsCard from "../components/NewsCard.astro";
import { getCollection } from "astro:content";
import TagFilters from "../components/TagFilters.astro";


/** Carga artículos y ordena por fecha desc */
const allPosts = (await getCollection("blog"))
  .filter(p => (p.data?.status ?? "draft") !== "hidden")
  .sort((a,b)=> new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime());

/** Dedupe helper por slug */
const used = new Set<string>();
const take = (arr: typeof allPosts, n: number) => {
  const out: typeof allPosts = [];
  for (const p of arr) {
    if (!used.has(p.slug)) { out.push(p); used.add(p.slug); }
    if (out.length >= n) break;
  }
  return out;
};

/** Top (últimas) */
const TOP = take(allPosts, 6);

/** Orden preferente de secciones por tag “bonito” del frontmatter */
const ORDER = ["Colombia","Finanzas","Economía","Pagos","Emprendimiento","Proyectos","Tecnología","Judicial","Cripto","América Latina","Mundo"];

/** Crea un mapa tag → posts sin repetir */
const byTag: Record<string, typeof allPosts> = {};
for (const nice of ORDER) {
  const group = allPosts.filter(p => (p.data?.tags ?? []).includes(nice)).filter(p => !used.has(p.slug));
  byTag[nice] = take(group, 4);
}


<html lang="es">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>Col Finance — Noticias financieras de Colombia y el mundo</title>
  </head>
  <body>
    <Header />

    <main class="layout">
      <!-- Columna principal -->
      <section class="main">
        <!-- Top -->
        <TagFilters tags={ORDER} />
        <section aria-label="Últimas">
          <h2 class="section-title">Últimas</h2>
          <div class="grid grid-top">
            {TOP.map(p => (
              <NewsCard
                url={`/blog/${p.slug}/`}
                title={p.data.title}
                description={p.data.description}
                pubDate={new Date(p.data.pubDate)}
                tags={p.data.tags ?? []}
              />
            ))}
          </div>
        </section>

        <!-- Secciones por tag (sin duplicados) -->
        {ORDER.map(tag => (
          byTag[tag]?.length ? (
            <section data-section={tag} aria-label={tag}>
              <h2 class="section-title">{tag}</h2>
              <div class="grid">
                {byTag[tag].map(p => (
                  <NewsCard
                    compact={true}
                    url={`/blog/${p.slug}/`}
                    title={p.data.title}
                    description={p.data.description}
                    pubDate={new Date(p.data.pubDate)}
                    tags={p.data.tags ?? []}
                  />
                ))}
              </div>
            </section>
          ) : null
        ))}
      </section>

      <!-- Barra derecha (KPIs) -->
      <aside class="side">
        <KpiPanel />
      </aside>
    </main>

    <Footer />
  </body>
</html>

<style>
/* Layout responsive: móvil 1 columna; desktop 2 columnas con barra derecha */
.layout { max-width: 1100px; margin: 0 auto; padding: 12px 16px; display: grid; gap: 12px; grid-template-columns: 1fr; }
.main > section { margin-bottom: 18px; }
.section-title { font-size: 18px; margin: 8px 0 10px; }
.grid { display: grid; gap: 10px; grid-template-columns: 1fr; }
.grid-top { grid-template-columns: 1fr; }

@media (min-width: 640px) {
  .grid { grid-template-columns: 1fr 1fr; }
  .grid-top { grid-template-columns: 1fr 1fr; }
}
@media (min-width: 1024px) {
  .layout { grid-template-columns: minmax(0,1fr) 320px; align-items: start; }
  .grid { grid-template-columns: repeat(3, 1fr); }
  .grid-top { grid-template-columns: repeat(3, 1fr); }
  .side { position: sticky; top: 10px; }
}
</style>
